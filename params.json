{"name":"Knmi","body":"knmi\r\n====\r\n\r\nRuby API to access Royal Netherlands Meteorological Institute daily climate data\r\nAccess climatological data as provided by the Royal Netherlands Meteorological Institute through the http get forms for daily and hourly data\r\n\r\n* http://www.knmi.nl/climatology/daily_data/getdata_day.cgi\r\n* http://www.knmi.nl/klimatologie/uurgegevens/getdata_uur.cgi\r\n\r\nThis gem was constructed using information from the KNMI climate data pages here.\r\n\r\n* Hourly data (Dutch) - http://www.knmi.nl/klimatologie/uurgegevens/scriptxs-nl.html#uur\r\n* Daily data (English) - http://www.knmi.nl/climatology/daily_data/scriptxs-en.html\r\n* Select Data with a form, listed below are links to metadata about each station http://www.knmi.nl/climatology/daily_data/selection.cgi\r\n\r\nInstallation\r\n------------\r\nRequires Ruby 1.9.2\r\n\r\n\tgem install httparty\r\n\tgem install geokit\r\n\t\r\n\tgem install knmi\r\n\r\nExample Usage\r\n-------------\r\n\r\nLaunch console e.g. irb at the command line\r\n\r\n### Quick Script\r\n\r\n```ruby\r\nrequire 'knmi'\r\n\r\nstation = KNMI.station_by_id(235)\r\nparameters = KNMI.parameters(period = \"daily\", params = nil, categories = [\"TEMP\", \"WIND\"])\r\nstarts = Time.utc(2010, 6, 28) # 2010 June 28th\r\nends = Time.utc(2010, 6, 29) # 2010 June 29th\r\nrequest = KNMI.get_data(station, parameters, starts, ends)\r\ndata = KNMI.convert(parameters, request)\r\n```\r\n### Elaborated Script\r\n\r\n```ruby\r\nrequire 'knmi'\r\n\r\n# Get station object by station ID\r\nstation = KNMI.station_by_id(235)\r\n\r\nstation\r\n#=> #<KNMI::Station:0x0000010133c938> # A struct object\r\n\r\n# Available Instance Variables\r\nstation.instance_variables\r\n#=> [:@id, :@name, :@elevation, :@photo, :@map, :@web, :@instrumentation, :@coordinates]\r\nstation.id\r\n#=> 235\r\nstation.name\r\n#=>\"De kooy\"\r\nstation.coordinates\r\n#=> 52.924,4.785\r\n\r\n\r\n# Get parameter object at the time interval you wish to use \"hourly\" or \"daily\"\r\n# Params can be a single term or an array of terms such as \"TG\" or [\"TG\", TX]\r\n# Categories can be a single term or an array of terms such as \"WIND\" or [\"WIND\", \"TEMP\"]\r\nparameters = KNMI.parameters(period = \"daily\", params = nil, categories = [\"TEMP\", \"WIND\"])\r\n\r\nparameters # returns an array of parameter objects\r\n#=> [#<KNMI::Parameters:0x000001011387e0 @parameter=\"TX\", @category=\"TEMP\", @description=\"Maximum Temperature\", @validate=\"n.integer?\", @conversion=\"n / 10\", @units=\"C\", @period=\"daily\">]\r\n\r\n# Available Instance Variables\r\nparameters[0].instance_variables\r\n#=>[:@parameter, :@category, :@description, :@validate, :@conversion, :@units, :@period]\r\n\r\nparameters[0].parameter\r\n#=> \"TX\"\r\n\r\n\r\n# Define Time period of interest\r\nstarts = Time.utc(2010, 6, 28) \t# 2010 June 28th\r\nends = Time.utc(2010, 7, 01) \t\t# 2010 June 29th\r\n\r\n# Get Data using previously retrieved objects\r\nrequest = KNMI.get_data(station, parameters, starts, ends)\r\n\r\n# Available Instance Variables\r\nrequest.instance_variables\r\n#=> [:@query, :@data]\r\n\r\nrequest.query\r\n#=>[\"stns=235\", \"vars=TX\", \"start=20100628\", \"end=20100629\"]\r\n\r\nrequest.data\r\n#=>[{:STN=>\"235\", :YYYYMMDD=>\"20100628\", :TX=>\"263\"}, {:STN=>\"235\", :YYYYMMDD=>\"20100629\", :TX=>\"225\"}]\r\n\r\nrequest.data[0]\r\n#=>{:STN=>\"235\", :YYYYMMDD=>\"20100628\", :TX=>\"263\"}\r\n\r\n\r\n# Convert data from storage format to operating format\r\ndata = KNMI.convert(parameters, request)\r\n```\r\n\r\n\r\nAvailable Parameters\r\n--------------------\r\nAll available recorded parameters can be found in the file .data/data_key.yml \r\nThis file contains the parameter name, category, description, a script to validate the data, a script to convert the data to to appropriate units, units, and the appropriate period.\r\n\r\nDaily Data\r\n----------\r\n|Parameter|Category|Description|\r\n|:--------|:-------|:----------|\r\n|YYYYMMDD |        | Time Stamp|\r\n|DDVEC    |WIND    | Wind Direction |\r\n|FHVEC    |WIND    | Vector Mean Wind Speed|\r\n|FG   |WIND    | Daily Mean Wind Speed|\r\n|FHX    |WIND    | Maximum Hourly Mean Windspeed|\r\n|FHXH   |WIND    | Hourly Division  at Which Maximum Wind Speed Was Measured|\r\n|FHN    |WIND    | Minimum Hourly Mean Windspeed|\r\n|FHNH   |WIND    | Hourly Division  at Which Minimum Wind Speed Was Measured|\r\n|FXX    |WIND    | Maximum Instantaneous Wind Speed|\r\n|FXXH   |WIND    | Hourly Division  at Which Maximum Instantaneous Wind Speed Was Measured|\r\n|TG   |TEMP    | Daily Mean Temperature|\r\n|TN   |TEMP    | Minimum Temperature|\r\n|TNH    |TEMP    | Hourly Division in Which Minimum Temperature Was Measured|\r\n|TX   |TEMP    | Maximum Temperature|\r\n|TXH    |TEMP    | Hourly Division in Which Maximum Temperature Was Measured|\r\n|T10N   |TEMP    | Minimum Temperature at 10 Cm Above Surface|\r\n|T10NH    |TEMP    | Six Hourly Division at Which Minimum Temperature at 10 Cm Above Surface Was Measured|\r\n|SQ   |RADT    | Sunshine Duration|\r\n|SP   |RADT    | Percent of Maximum Sunshine Duration|\r\n|Q    |RADT    | Global Radiation|\r\n|DR   |PRCP    | Precipitation Duration|\r\n|RH   |PRCP    | Daily Precipitation|\r\n|RHX    |PRCP    | Maximum Hourly Precipitation|\r\n|RHXH   |PRCP    | Hourly Division in Which Maximum Hourly Precipitation Was Measured|\r\n|EV24   |ATMS    | Potential Evapotranspiration|\r\n|PG   |ATMS    | Daily Mean Sea Level Pressure|\r\n|PX   |ATMS    | Maximum Hourly Sea Level Pressure|\r\n|PXH    |ATMS    | Hourly Division on Which Maximum Hourly Sea Level Pressure Was Measured|\r\n|PN   |ATMS    | Minimum Hourly Sea Level Pressure|\r\n|PNH    |ATMS    | Hourly Division in Which Minimum Hourly Sea Level Pressure Was Measured|\r\n|VVN    |VISB    | Minimum Visibility|\r\n|VVNH   |VISB    | Hourly Division in Which Minimum Visibility Was Measured|\r\n|VVX    |VISB    | Maximum Visibility|\r\n|VVXH   |VISB    | Hourly Division in Which Maximum Visibility Was Measured|\r\n|NG   |VISB    | Mean Daily Cloud Cover|\r\n|UG   |ATMS    | Daily Mean Relative Humidity|\r\n|UX   |ATMS    | Maximum Relative Humidity|\r\n|UXH    |ATMS    | Hourly Division in Which Maximum Relative Humidity Was Measured|\r\n|UN   |ATMS    | Minimum Relative Humidity|\r\n|UNH    |ATMS    | Hourly Division in Which Minimum Relative Humidity Was Measured|\r\n\r\nHourly Data\r\n-----------\r\n|Parameter|Category|Description|\r\n|:--------|:-------|:----------|\r\n|YYYYMMDD |        | Time Stamp|\r\n|HH       |\t       |Hour |\r\n|DD   |WIND    | Mean wind direction during the 10-minute period preceding the time of observation|\r\n|FH   |WIND    | Hourly mean wind speed|\r\n|FF   |WIND    | Mean wind speed|\r\n|FX   |WIND    | Maximum wind gust|\r\n|T    |TEMP    | Air Temperature at 1.5 m|\r\n|T10N   |TEMP    | Minimum Air Temperature at 10 cm in the preceding 6 hours|\r\n|TD   |TEMP    | Dew Point Temperature|\r\n|SQ   |RDTN    | Sunshine Duration|\r\n|Q    |RDTN    | Golbal Radiation|\r\n|DR   |PRCP    | Precipitation Duration|\r\n|RH   |PRCP    | Precipitation|\r\n|P    |ATMS    | Air Pressure|\r\n|VV   |VISB    | Visibility|\r\n|N    |VISB    | Cloud Cover|\r\n|U    |ATMS    | Relative Humidity|\r\n|M    |WTHR    | Fog|\r\n|R    |WTHR    | Rainfall|\r\n|S    |WTHR    | Snow|\r\n|O    |WTHR    | Thunder|\r\n|Y    |WTHR    | Ice|\r\n|WW   |WTHR    | Weather Code|\r\n\r\nTODO\r\n----\r\n\r\nWrite unit tests for lib/calculations/calculations.rb\r\n                    \r\nPlease Note the license included in the header source header\r\n---------------------------------------------------------------\r\n\t# DEZE GEGEVENS MOGEN VRIJ WORDEN GEBRUIKT MITS DE VOLGENDE BRONVERMELDING WORDT GEGEVEN:\r\n\t# KONINKLIJK NEDERLANDS METEOROLOGISCH INSTITUUT (KNMI)\r\n\t#\r\n\t# THESE DATA CAN BE USED FREELY PROVIDED THAT THE FOLLOWING SOURCE IS ACKNOWLEDGED:\r\n\t# ROYAL NETHERLANDS METEOROLOGICAL INSTITUTE\r\n\r\nCopyright\r\n---------\r\n\r\nCopyright (c) 2011 Patrick Galvin Schmitz p.schmitz@gmail.com. See LICENSE.txt for\r\nfurther details.\r\n\r\nCopyright (c) 2008 Mat Brown\r\nPortions of stations.rb were adapted from Mat Brown's https://github.com/outoftime/noaa ","tagline":"Ruby API to access ROYAL NETHERLANDS METEOROLOGICAL INSTITUTE daily climate data","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}